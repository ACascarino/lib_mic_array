// Copyright (c) 2016, XMOS Ltd, All rights reserved
#include "mic_array.h"
#include <stdio.h>
#include <xs1.h>
#include <stdlib.h>
#include <math.h>
#include <xscope.h>

int data[4*THIRD_STAGE_COEFS_PER_STAGE*2] = {0};
frame_audio audio[2];

int dc_elim_model(int x, int &prev_x, long long & y){
    y = y - (y>>8);
    y = y - prev_x;
    y = y + x;
    prev_x = x;
    return (y>>8);
}

void test(){

    streaming chan c_pdm_to_dec;
    streaming chan c_ds_output[1];
    par {
        {
#define SINE_LENGTH 64
#define INPUT_SAMPLES (SINE_LENGTH*8)
#if 0
            int one_khz_sine[INPUT_SAMPLES] = { 12345678, 38547105, 64744586,
                    90934177, 117111932, 143273910, 169416170, 195534777,
                    221625795, 247685297, 273709358, 299694058, 325635485,
                    351529731, 377372897, 403161092, 428890431, 454557041,
                    480157054, 505686618, 531141885, 556519024, 581814213,
                    607023641, 632143514, 657170047, 682099472, 706928034,
                    731651995, 756267631, 780771235, 805159117, 829427604,
                    853573042, 877591794, 901480243, 925234791, 948851862,
                    972327899, 995659365, 1018842749, 1041874557, 1064751323,
                    1087469599, 1110025967, 1132417027, 1154639409, 1176689766,
                    1198564776, 1220261147, 1241775610, 1263104925, 1284245881,
                    1305195293, 1325950006, 1346506896, 1366862866, 1387014850,
                    1406959815, 1426694755, 1446216700, 1465522710, 1484609876,
                    1503475324, 1522116214, 1540529738, 1558713123, 1576663631,
                    1594378558, 1611855237, 1629091036, 1646083359, 1662829647,
                    1679327378, 1695574068, 1711567270, 1727304575, 1742783614,
                    1758002055, 1772957607, 1787648017, 1802071073, 1816224603,
                    1830106475, 1843714600, 1857046927, 1870101449, 1882876199,
                    1895369255, 1907578734, 1919502798, 1931139651, 1942487541,
                    1953544758, 1964309639, 1974780560, 1984955946, 1994834264,
                    2004414027, 2013693792, 2022672161, 2031347782, 2039719348,
                    2047785600, 2055545322, 2062997346, 2070140549, 2076973856,
                    2083496237, 2089706711, 2095604342, 2101188241, 2106457569,
                    2111411531, 2116049382, 2120370422, 2124374002, 2128059518,
                    2131426415, 2134474187, 2137202374, 2139610565, 2141698398,
                    2143465558, 2144911779, 2146036844, 2146840583, 2147322875,
                    2147483647, 2147322875, 2146840583, 2146036844, 2144911779,
                    2143465558, 2141698398, 2139610565, 2137202374, 2134474187,
                    2131426415, 2128059518, 2124374002, 2120370422, 2116049382,
                    2111411531, 2106457569, 2101188241, 2095604342, 2089706711,
                    2083496237, 2076973856, 2070140549, 2062997346, 2055545322,
                    2047785600, 2039719349, 2031347782, 2022672161, 2013693792,
                    2004414027, 1994834264, 1984955946, 1974780560, 1964309639,
                    1953544758, 1942487541, 1931139651, 1919502798, 1907578734,
                    1895369255, 1882876199, 1870101449, 1857046927, 1843714600,
                    1830106475, 1816224603, 1802071073, 1787648017, 1772957607,
                    1758002055, 1742783614, 1727304575, 1711567270, 1695574068,
                    1679327378, 1662829647, 1646083359, 1629091036, 1611855237,
                    1594378559, 1576663631, 1558713123, 1540529738, 1522116214,
                    1503475324, 1484609876, 1465522710, 1446216701, 1426694756,
                    1406959815, 1387014850, 1366862866, 1346506896, 1325950006,
                    1305195293, 1284245881, 1263104925, 1241775610, 1220261147,
                    1198564777, 1176689766, 1154639409, 1132417027, 1110025967,
                    1087469600, 1064751323, 1041874557, 1018842749, 995659366,
                    972327899, 948851862, 925234791, 901480243, 877591794,
                    853573042, 829427604, 805159117, 780771235, 756267631,
                    731651995, 706928034, 682099472, 657170047, 632143514,
                    607023642, 581814213, 556519024, 531141885, 505686618,
                    480157055, 454557041, 428890432, 403161092, 377372898,
                    351529731, 325635485, 299694058, 273709358, 247685298,
                    221625796, 195534777, 169416171, 143273910, 117111932,
                    90934177, 64744587, 38547105, 12345678, -13855749,
                    -40053230, -66242821, -92420576, -118582554, -144724814,
                    -170843421, -196934439, -222993941, -249018002, -275002702,
                    -300944129, -326838375, -352681541, -378469736, -404199075,
                    -429865684, -455465698, -480995261, -506450529, -531827668,
                    -557122857, -582332285, -607452158, -632478691, -657408115,
                    -682236678, -706960639, -731576275, -756079879, -780467761,
                    -804736248, -828881686, -852900437, -876788886, -900543435,
                    -924160506, -947636543, -970968009, -994151393, -1017183201,
                    -1040059966, -1062778243, -1085334610, -1107725671,
                    -1129948053, -1151998410, -1173873420, -1195569791,
                    -1217084254, -1238413569, -1259554524, -1280503936,
                    -1301258650, -1321815540, -1342171510, -1362323494,
                    -1382268459, -1402003399, -1421525344, -1440831353,
                    -1459918520, -1478783968, -1497424858, -1515838382,
                    -1534021767, -1551972275, -1569687202, -1587163881,
                    -1604399680, -1621392003, -1638138291, -1654636022,
                    -1670882712, -1686875914, -1702613219, -1718092258,
                    -1733310699, -1748266251, -1762956661, -1777379717,
                    -1791533247, -1805415119, -1819023244, -1832355571,
                    -1845410092, -1858184843, -1870677899, -1882887378,
                    -1894811442, -1906448295, -1917796185, -1928853402,
                    -1939618282, -1950089204, -1960264590, -1970142908,
                    -1979722671, -1989002436, -1997980804, -2006656426,
                    -2015027992, -2023094244, -2030853966, -2038305990,
                    -2045449193, -2052282500, -2058804881, -2065015355,
                    -2070912986, -2076496885, -2081766213, -2086720175,
                    -2091358026, -2095679066, -2099682646, -2103368162,
                    -2106735059, -2109782831, -2112511018, -2114919209,
                    -2117007042, -2118774202, -2120220423, -2121345488,
                    -2122149227, -2122631519, -2122792291, -2122631519,
                    -2122149227, -2121345488, -2120220423, -2118774202,
                    -2117007042, -2114919209, -2112511018, -2109782831,
                    -2106735059, -2103368162, -2099682646, -2095679066,
                    -2091358026, -2086720175, -2081766213, -2076496886,
                    -2070912986, -2065015355, -2058804881, -2052282500,
                    -2045449193, -2038305990, -2030853966, -2023094244,
                    -2015027993, -2006656426, -1997980805, -1989002436,
                    -1979722671, -1970142908, -1960264590, -1950089204,
                    -1939618283, -1928853403, -1917796185, -1906448295,
                    -1894811442, -1882887378, -1870677899, -1858184843,
                    -1845410093, -1832355571, -1819023244, -1805415120,
                    -1791533247, -1777379717, -1762956661, -1748266251,
                    -1733310699, -1718092258, -1702613219, -1686875914,
                    -1670882712, -1654636022, -1638138291, -1621392003,
                    -1604399680, -1587163882, -1569687203, -1551972275,
                    -1534021767, -1515838382, -1497424858, -1478783969,
                    -1459918520, -1440831354, -1421525345, -1402003400,
                    -1382268459, -1362323495, -1342171510, -1321815540,
                    -1301258651, -1280503937, -1259554525, -1238413569,
                    -1217084254, -1195569791, -1173873421, -1151998410,
                    -1129948053, -1107725671, -1085334611, -1062778244,
                    -1040059967, -1017183202, -994151393, -970968010,
                    -947636543, -924160507, -900543436, -876788887, -852900438,
                    -828881686, -804736248, -780467761, -756079879, -731576275,
                    -706960639, -682236678, -657408116, -632478691, -607452158,
                    -582332286, -557122857, -531827669, -506450530, -480995262,
                    -455465699, -429865685, -404199076, -378469736, -352681542,
                    -326838375, -300944129, -275002703, -249018002, -222993942,
                    -196934440, -170843421, -144724815, -118582554, -92420576,
                    -66242821, -40053231, -13855749

            };
#else
            int one_khz_sine[INPUT_SAMPLES];
            int actual_dc_offset = 0;
            for(unsigned i=0;i<INPUT_SAMPLES;i++)
                one_khz_sine[i] = (int)((double)(INT_MAX-actual_dc_offset)
                        *sin((double)i*3.1415926535*2.0 / (double)INPUT_SAMPLES) + actual_dc_offset);

#endif
            while(1){
                for(unsigned i=0;i<INPUT_SAMPLES;i++){
                    c_pdm_to_dec <: one_khz_sine[i];
                    c_pdm_to_dec <: one_khz_sine[i];
                    c_pdm_to_dec <: one_khz_sine[i];
                    c_pdm_to_dec <: one_khz_sine[i];
                }
            }

            _Exit(0);
        }

        decimate_to_pcm_4ch(c_pdm_to_dec, c_ds_output[0]);

        {
            unsafe{
                unsigned buffer;
                decimator_config_common dcc = {0, 1, 0, 0, 2, g_third_stage_div_2_fir, 0, 0, DECIMATOR_NO_FRAME_OVERLAP, 2  };
                decimator_config dc[1] = { { &dcc, data, { INT_MAX, INT_MAX, INT_MAX, INT_MAX },4 }};
                decimator_configure(c_ds_output, 1, dc);
                decimator_init_audio_frame(c_ds_output, 1 , buffer, audio, dcc);

                long long rolling_window[SINE_LENGTH] = {0};
                long long sum = 0;
                unsigned head = 0;

                int prev_x = 0;
                unsigned count = 0;
                while(1){
                    frame_audio *current = decimator_get_next_audio_frame(c_ds_output, 1, buffer, audio, dcc);
                    count++;
                    int x = current->data[0][0];

                    //wait for DC to become zero
                    sum -= rolling_window[head];
                    sum += x;
                    rolling_window[head] = x;
                    head ++;
                    if(head == SINE_LENGTH)
                        head = 0;

                    int diff = x - prev_x;
                    if (diff < 0) diff = -diff;
                    if(diff > (INT_MAX/2)){
                        printf("Error: sine rapped really hard\n");
                        _Exit(1);
                    }
                    prev_x=x;

                    if((count > 3)&&((sum/SINE_LENGTH) == 0)){
                        printf("Success!\n");
                        _Exit(1);
                    }

                }
            }
        }
    }

}

int main(){

    test();
    return 0;
}
